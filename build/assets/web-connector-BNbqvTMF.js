const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/eth_getTransactionCount-Dy3UYLy3.js","assets/index-r-K8bCt4.js","assets/index-BwMRwPhq.css","assets/in-app-wallet-calls-DoVweYsf.js","assets/wait-for-tx-receipt-C9zxAqk4.js","assets/to-serializable-transaction-BMbNRj8d.js","assets/sleep-mAKpSMLY.js","assets/send-transaction-DRs_bS9h.js","assets/random-Dc3txyW0.js"])))=>i.map(i=>d[i]);
import{a7 as h,a8 as w,K as p,S as f,O as b,U as B,a9 as K,aa as S,N as P,a1 as M,ab as W,ac as Y,ad as z,ae as _,af as X}from"./index-r-K8bCt4.js";import{a as Z}from"./types-CY5aNEio.js";import{r as ee}from"./random-Dc3txyW0.js";import{e as G}from"./eth_sendRawTransaction-DPdnXbFR.js";import{s as k}from"./sleep-mAKpSMLY.js";const te="/sdk/2022-08-12/embedded-wallet",v=t=>`thirdwebEwsWalletUserId-${t}`,ne="walletToken",A=t=>`${ne}-${t}`,$=t=>`passkey-credential-id-${t}`,ae="a",T=(t,e)=>`${ae}-${t}-${e}`,j=t=>`walletConnectSessions-${t}`,D=t=>`thirdweb_guest_session_id_${t}`,U=new Map;class x{constructor({storage:e,clientId:n,ecosystem:a}){Object.defineProperty(this,"key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.storage=e,this.key=ie(n,a?.id),this.ecosystem=a}async getItem(e){return this.storage?this.storage.getItem(e):U.get(e)??null}async setItem(e,n){if(this.storage)return this.storage.setItem(e,n);U.set(e,n)}async removeItem(e){const n=await this.getItem(e);return this.storage&&n?(this.storage.removeItem(e),!0):!1}async getWalletConnectSessions(){return this.getItem(j(this.key))}async saveWalletConnectSessions(e){await this.setItem(j(this.key),e)}async savePasskeyCredentialId(e){await this.setItem($(this.key),e)}async getPasskeyCredentialId(){return this.getItem($(this.key))}async saveAuthCookie(e){await this.setItem(A(this.key),e)}async getAuthCookie(){return this.getItem(A(this.key))}async removeAuthCookie(){return this.removeItem(A(this.key))}async saveDeviceShare(e,n){await this.saveWalletUserId(n),await this.setItem(T(this.key,n),e)}async getDeviceShare(){const e=await this.getWalletUserId();return e?this.getItem(T(this.key,e)):null}async removeDeviceShare(){const e=await this.getWalletUserId();return e?this.removeItem(T(this.key,e)):!1}async getWalletUserId(){return this.getItem(v(this.key))}async saveWalletUserId(e){await this.setItem(v(this.key),e)}async removeWalletUserId(){return this.removeItem(v(this.key))}async getGuestSessionId(){return this.getItem(D(this.key))}async saveGuestSessionId(e){await this.setItem(D(this.key),e)}}const ie=(t,e)=>`${t}${e?`-${e}`:""}`,E=new Map,se={getItem:async t=>E.get(t)??null,removeItem:async t=>{E.delete(t)},setItem:async(t,e)=>{E.set(t,e)}};async function O({authToken:t,client:e,ecosystem:n}){const s=await h(e,n)(`${w("inAppWallet")}/api/2024-05-05/accounts`,{headers:{Authorization:`Bearer embedded-wallet-token:${t}`,"Content-Type":"application/json"},method:"GET"});if(!s.ok){const o=await s.text().catch(()=>"Unknown error");throw new Error(`Failed to get user info: ${o}`)}return await s.json()}const re=w("inAppWallet"),oe=`${re}/`,V=`${oe}api/2023-10-20`,ce=`${V}/embedded-wallet/validate-custom-jwt`,le=`${V}/embedded-wallet/validate-custom-auth-endpoint`,H=(t,e)=>e instanceof Error?`${t}: ${e.message}`:`${t}: ${p(e)}`;async function ue(t){const n=await h(t.client,t.ecosystem)(le,{body:p({developerClientId:t.client.clientId,payload:t.payload}),headers:{"Content-Type":"application/json"},method:"POST"});if(!n.ok){const a=await n.json();throw new Error(`Custom auth endpoint authentication error: ${a.message}`)}try{const{verifiedToken:a}=await n.json();return{storedToken:a}}catch(a){throw new Error(H("Malformed response from post auth_endpoint authentication",a))}}const q=t=>{if(!Z.includes(t))throw new Error(`Unknown auth option ${t}`);switch(t){case"wallet":return"siwe";default:return t}},I=({authOption:t,client:e,ecosystem:n,mode:a="popup",redirectUrl:s})=>{if(a==="popup"&&s)throw new Error("Redirect URL is not supported for popup mode");if(a==="window"&&!s)throw new Error("Redirect URL is required for window mode");const o=q(t);let r=`${w("inAppWallet")}/api/2024-05-05/login/${o}?clientId=${e.clientId}`;if(n?.partnerId?r=`${r}&ecosystemId=${n.id}&ecosystemPartnerId=${n.partnerId}`:n&&(r=`${r}&ecosystemId=${n.id}`),a!=="popup"){const i=new URL(s||window.location.href);i.searchParams.set("walletId",n?.id||"inApp"),i.searchParams.set("authProvider",t),r=`${r}&redirectUrl=${encodeURIComponent(i.toString())}`}return r},C=({authOption:t,client:e,ecosystem:n})=>{const a=q(t);let s=`${w("inAppWallet")}/api/2024-05-05/login/${a}/callback?clientId=${e.clientId}`;return n?.partnerId?s=`${s}&ecosystemId=${n.id}&ecosystemPartnerId=${n.partnerId}`:n&&(s=`${s}&ecosystemId=${n.id}`),s};async function de(t){const e=h(t.client,t.ecosystem),n=I({authOption:"backend",client:t.client,ecosystem:t.ecosystem}),a=await e(`${n}`,{body:p({walletSecret:t.walletSecret}),headers:{"Content-Type":"application/json"},method:"POST"});if(!a.ok){const s=await a.text();throw new Error(`Failed to generate backend account: ${s}`)}return await a.json()}async function he(t){let e=await t.storage.getGuestSessionId();e||(e=ee(32),t.storage.saveGuestSessionId(e));const n=h(t.client,t.ecosystem),a=C({authOption:"guest",client:t.client,ecosystem:t.ecosystem}),s=await n(`${a}`,{body:p({sessionId:e}),headers:{"Content-Type":"application/json"},method:"POST"});if(!s.ok){const o=await s.text();throw new Error(`Failed to generate guest account: ${s.status} ${s.statusText} ${o}`)}return await s.json()}async function we(t){const n=await h(t.client,t.ecosystem)(ce,{body:p({developerClientId:t.client.clientId,jwt:t.jwt}),headers:{"Content-Type":"application/json"},method:"POST"});if(!n.ok){const a=await n.json();throw new Error(`JWT authentication error: ${a.message}`)}try{const{verifiedToken:a}=await n.json();return{storedToken:a}}catch(a){throw new Error(H("Malformed response from post jwt authentication",a))}}async function pe({client:t,ecosystem:e,tokenToLink:n,storage:a}){const s=h(t,e),o=w("inAppWallet"),r=await a.getAuthCookie();if(!r)throw new Error("Failed to link account, no user logged in");const i={Authorization:`Bearer iaw-auth-token:${r}`,"Content-Type":"application/json"},l=await s(`${o}/api/2024-05-05/account/connect`,{body:p({accountAuthTokenToConnect:n}),headers:i,method:"POST"});if(!l.ok){const u=await l.json();throw new Error(u.message||"Failed to link account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function ge({client:t,ecosystem:e,profileToUnlink:n,allowAccountDeletion:a=!1,storage:s}){const o=h(t,e),r=w("inAppWallet"),i=await s.getAuthCookie();if(!i)throw new Error("Failed to unlink account, no user logged in");const l={Authorization:`Bearer iaw-auth-token:${i}`,"Content-Type":"application/json"},c=await o(`${r}/api/2024-05-05/account/disconnect`,{body:p({allowAccountDeletion:a,details:n.details,type:n.type}),headers:l,method:"POST"});if(!c.ok){const d=await c.json();throw new Error(d.message||"Failed to unlink account.")}const{linkedAccounts:u}=await c.json();return u??[]}async function me({client:t,ecosystem:e,storage:n}){const a=h(t,e),s=w("inAppWallet"),o=await n.getAuthCookie();if(!o)throw new Error("Failed to get linked accounts, no user logged in");const r={Authorization:`Bearer iaw-auth-token:${o}`,"Content-Type":"application/json"},i=await a(`${s}/api/2024-05-05/accounts`,{headers:r,method:"GET"});if(!i.ok){const c=await i.json();throw new Error(c.message||"Failed to get linked accounts.")}const{linkedAccounts:l}=await i.json();return l??[]}function Q(){return`${w("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function J(t,e){return`${w("inAppWallet")}/api/2024-05-05/login/passkey?type=${t}${e?`&username=${e}`:""}`}async function ye(t){if(!t.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=h(t.client,t.ecosystem),n=t.username??Ie(t.ecosystem),s=await(await e(J("sign-up",n))).json();if(!s.challenge)throw new Error("No challenge received");const o=s.challenge,r=await t.passkeyClient.register({challenge:o,name:n,rp:t.rp}),i={};t.ecosystem?.partnerId&&(i["x-ecosystem-partner-id"]=t.ecosystem.partnerId),t.ecosystem?.id&&(i["x-ecosystem-id"]=t.ecosystem.id);const c=await(await e(Q(),{body:p({authenticatorData:r.authenticatorData,clientData:r.clientData,credential:{algorithm:r.credential.algorithm,publicKey:r.credential.publicKey},credentialId:r.credentialId,origin:r.origin,rpId:t.rp.id,serverVerificationId:s.serverVerificationId,type:"sign-up",username:n}),headers:{"Content-Type":"application/json",...i},method:"POST"})).json();if(!c||!c.storedToken)throw new Error(`Error verifying passkey: ${c.message??"unknown error"}`);return await t.storage?.savePasskeyCredentialId(r.credentialId),c}async function fe(t){if(!t.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=h(t.client,t.ecosystem),[n,a]=await Promise.all([e(J("sign-in")).then(c=>c.json()),t.storage?.getPasskeyCredentialId()]);if(!n.challenge)throw new Error("No challenge received");const s=n.challenge,o=await t.passkeyClient.authenticate({challenge:s,credentialId:a??void 0,rp:t.rp}),r={};t.ecosystem?.partnerId&&(r["x-ecosystem-partner-id"]=t.ecosystem.partnerId),t.ecosystem?.id&&(r["x-ecosystem-id"]=t.ecosystem.id);const l=await(await e(Q(),{body:p({authenticatorData:o.authenticatorData,clientData:o.clientData,credentialId:o.credentialId,origin:o.origin,rpId:t.rp.id,serverVerificationId:n.serverVerificationId,signature:o.signature,type:"sign-in"}),headers:{"Content-Type":"application/json",...r},method:"POST"})).json();if(!l||!l.storedToken)throw new Error(`Error verifying passkey: ${l.message??"unknown error"}`);return await t.storage?.savePasskeyCredentialId(o.credentialId),l}function Ie(t){return`${t?.id??"wallet"}-${new Date().toISOString()}`}function be(t){let a=[`${t.domain} wants you to sign in with your Ethereum account:`,t.address].join(`
`);a=[a,t.statement].join(`

`),t.statement&&(a+=`
`);const s=[];if(t.uri){const u=`URI: ${t.uri}`;s.push(u)}const o=`Version: ${t.version}`;if(s.push(o),t.chain_id){const u=`Chain ID: ${t.chain_id}`||"1";s.push(u)}const r=`Nonce: ${t.nonce}`;s.push(r);const i=`Issued At: ${t.issued_at}`;s.push(i);const l=`Expiration Time: ${t.expiration_time}`;if(s.push(l),t.invalid_before){const u=`Not Before: ${t.invalid_before}`;s.push(u)}t.resources&&s.push(["Resources:",...t.resources.map(u=>`- ${u}`)].join(`
`));const c=s.join(`
`);return[a,c].join(`
`)}async function ke(t){const{payload:e,account:n}=t,a=await n.signMessage({message:be(e)});return{payload:e,signature:a}}async function ve(t){const{wallet:e,chain:n,client:a,ecosystem:s}=t,o=e.getAccount()||await e.connect({chain:n,client:a}),r=h(a,s),i=await(async()=>{const u=I({authOption:"wallet",client:t.client,ecosystem:t.ecosystem}),d=await r(`${u}&address=${o.address}&chainId=${n.id}`);if(!d.ok)throw new Error("Failed to generate SIWE login payload");return await d.json()})(),{signature:l}=await ke({account:o,payload:i});return await(async()=>{const u=C({authOption:"wallet",client:t.client,ecosystem:t.ecosystem}),d=await r(`${u}&signature=${l}&payload=${encodeURIComponent(i)}`,{body:p({payload:i,signature:l}),headers:{"Content-Type":"application/json"},method:"POST"});if(!d.ok)throw new Error("Failed to verify SIWE signature");return await d.json()})()}async function Ae({client:t,payload:e,storage:n}){const a=await n.getAuthCookie(),s=n.ecosystem,o=h(t,s);if(!a)throw new Error("No auth token found when signing message");const r={address:e.address,chainId:e.chainId,nonce:Number(e.nonce)},i=await o(`${w("inAppWallet")}/api/v1/enclave-wallet/sign-authorization`,{body:p(r),headers:{Authorization:`Bearer embedded-wallet-token:${a}`,"Content-Type":"application/json","x-thirdweb-client-id":t.clientId},method:"POST"});if(!i.ok)throw new Error(`Failed to sign message - ${i.status} ${i.statusText}`);return await i.json()}async function Te({client:t,payload:{message:e,isRaw:n,originalMessage:a,chainId:s},storage:o}){const r=await o.getAuthCookie(),i=o.ecosystem,l=h(t,i);if(!r)throw new Error("No auth token found when signing message");const c=await l(`${w("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{body:p({messagePayload:{chainId:s,isRaw:n,message:e,originalMessage:a}}),headers:{Authorization:`Bearer embedded-wallet-token:${r}`,"Content-Type":"application/json","x-thirdweb-client-id":t.clientId},method:"POST"});if(!c.ok)throw new Error(`Failed to sign message - ${c.status} ${c.statusText}`);return await c.json()}async function Ee({client:t,payload:e,storage:n}){const a=await n.getAuthCookie(),s=n.ecosystem,o=h(t,s);if(!a)throw new Error("No auth token found when signing transaction");const r=await o(`${w("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{body:p({transactionPayload:e}),headers:{Authorization:`Bearer embedded-wallet-token:${a}`,"Content-Type":"application/json","x-thirdweb-client-id":t.clientId},method:"POST"});if(!r.ok)throw new Error(`Failed to sign transaction - ${r.status} ${r.statusText}`);return(await r.json()).signature}async function Le({client:t,payload:e,storage:n}){const a=await n.getAuthCookie(),s=n.ecosystem,o=h(t,s);if(!a)throw new Error("No auth token found when signing typed data");const r=await o(`${w("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{body:p({...e}),headers:{Authorization:`Bearer embedded-wallet-token:${a}`,"Content-Type":"application/json","x-thirdweb-client-id":t.clientId},method:"POST"});if(!r.ok)throw new Error(`Failed to sign typed data - ${r.status} ${r.statusText}`);return await r.json()}class Se{constructor({client:e,ecosystem:n,address:a,storage:s}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=n,this.address=a,this.localStorage=s}async postWalletSetUp(e){await this.localStorage.saveAuthCookie(e.storedToken.cookieString)}async getUserWalletStatus(){const e=await this.localStorage.getAuthCookie();if(!e)return{status:"Logged Out"};const n=await O({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!n)return{status:"Logged Out"};const a=n.wallets[0],s={email:n.linkedAccounts.find(o=>o.details.email!==void 0)?.details.email,phoneNumber:n.linkedAccounts.find(o=>o.details.phone!==void 0)?.details.phone,recoveryShareManagement:"ENCLAVE",userWalletId:n.id||""};return a?{account:await this.getAccount(),authDetails:s,status:"Logged In, Wallet Initialized",walletAddress:a.address}:{authDetails:s,status:"Logged In, Wallet Uninitialized"}}async getAccount(){const e=this.client,n=this.localStorage,a=this.address,s=this.ecosystem,o=async i=>{const l=S({chain:P(i.chainId),client:e}),c={chainId:W(i.chainId),data:i.data,gas:g(i.gas),nonce:g(i.nonce)||W(await b(async()=>{const{eth_getTransactionCount:u}=await import("./eth_getTransactionCount-Dy3UYLy3.js");return{eth_getTransactionCount:u}},__vite__mapDeps([0,1,2])).then(({eth_getTransactionCount:u})=>u(l,{address:f(this.address),blockTag:"pending"}))),to:i.to?f(i.to):void 0,value:g(i.value)};return i.authorizationList&&i.authorizationList.length>0?(c.type=4,c.authorizationList=i.authorizationList,c.maxFeePerGas=g(i.maxFeePerGas),c.maxPriorityFeePerGas=g(i.maxPriorityFeePerGas)):g(i.maxFeePerGas)?(c.maxFeePerGas=g(i.maxFeePerGas),c.maxPriorityFeePerGas=g(i.maxPriorityFeePerGas),c.type=2):(c.gasPrice=g(i.gasPrice),c.type=0),Ee({client:e,payload:c,storage:n})},r={address:f(a),async sendTransaction(i){const l=S({chain:P(i.chainId),client:e}),c=await o(i),u=await G(l,c);return M({chainId:i.chainId,client:e,contractAddress:i.to??void 0,ecosystem:s,gasPrice:i.gasPrice,transactionHash:u,walletAddress:a,walletType:"inApp"}),{transactionHash:u}},async signAuthorization(i){const l=await Ae({client:e,payload:i,storage:n});return{address:f(l.address),chainId:Number.parseInt(l.chainId),nonce:BigInt(l.nonce),r:BigInt(l.r),s:BigInt(l.s),yParity:Number.parseInt(l.yParity)}},async signMessage({message:i,originalMessage:l,chainId:c}){const u=typeof i=="string"?{chainId:c,isRaw:!1,message:i,originalMessage:l}:{chainId:c,isRaw:!0,message:typeof i.raw=="string"?i.raw:K(i.raw),originalMessage:l},{signature:d}=await Te({client:e,payload:u,storage:n});return d},async signTransaction(i){if(!i.chainId)throw new Error("chainId required in tx to sign");return o({chainId:i.chainId,...i})},async signTypedData(i){const l=B(i),{signature:c}=await Le({client:e,payload:l,storage:n});return c},sendCalls:async i=>{const{inAppWalletSendCalls:l}=await b(async()=>{const{inAppWalletSendCalls:y}=await import("./in-app-wallet-calls-DoVweYsf.js");return{inAppWalletSendCalls:y}},__vite__mapDeps([3,4,1,2,5,6,7,8])),c=i.calls[0];if(!c)throw new Error("No calls to send");const u=c.client,d=c.chain||i.chain,m=await l({account:r,calls:i.calls});return{chain:d,client:u,id:m}},getCallsStatus:async i=>{const{inAppWalletGetCallsStatus:l}=await b(async()=>{const{inAppWalletGetCallsStatus:c}=await import("./in-app-wallet-calls-DoVweYsf.js");return{inAppWalletGetCallsStatus:c}},__vite__mapDeps([3,4,1,2,5,6,7,8]));return l(i)},getCapabilities:async i=>({[i.chainId??1]:{atomic:{status:"unsupported"},paymasterService:{supported:!1}}})};return r}}function g(t){return t===void 0||Y(t)?t:W(t)}const Pe={backgroundColor:"transparent",border:"none",colorScheme:"light",display:"none",height:"100%",pointerEvents:"all",position:"fixed",right:"0px",top:"0px",width:"100%",zIndex:"2147483646"},L=new Map;class We{constructor({link:e,baseUrl:n,iframeId:a,container:s,onIframeInitialize:o,localStorage:r,clientId:i,ecosystem:l}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=r,this.clientId=i,this.ecosystem=l,this.iframeBaseUrl=n,typeof document>"u")return;s=s??document.body;let c=document.getElementById(a);const u=new URL(e);if(!c||c.src!==u.href){c=document.createElement("iframe");const d={...Pe};Object.assign(c.style,d),c.setAttribute("id",a),c.setAttribute("fetchpriority","high"),s.appendChild(c),c.src=u.href;const m=y=>{if(y.data.eventType==="ewsIframeLoaded"){if(window.removeEventListener("message",m),!c){console.warn("thirdweb iFrame not found");return}this.onIframeLoadHandler(c,o)()}};window.addEventListener("message",m)}this.iframe=c}async onIframeLoadedInitVariables(){return{authCookie:await this.localStorage.getAuthCookie(),clientId:this.clientId,deviceShareStored:await this.localStorage.getDeviceShare(),ecosystemId:this.ecosystem?.id,partnerId:this.ecosystem?.partnerId,walletUserId:await this.localStorage.getWalletUserId()}}onIframeLoadHandler(e,n){return async()=>{const a=new MessageChannel,s=new Promise((o,r)=>{a.port1.onmessage=i=>{const{data:l}=i;a.port1.close(),l.success||r(new Error(l.error)),L.set(e.src,!0),n&&n(),o(!0)}});e?.contentWindow?.postMessage({data:await this.onIframeLoadedInitVariables(),eventType:"initIframe"},this.iframeBaseUrl,[a.port2]),await s}}async call({procedureName:e,params:n,showIframe:a=!1}){if(!this.iframe)throw new Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!L.get(this.iframe.src);)await k(this.POLLING_INTERVAL_SECONDS*1e3);a&&(this.iframe.style.display="block",await k(.005*1e3));const s=new MessageChannel,o=new Promise((r,i)=>{s.port1.onmessage=async l=>{const{data:c}=l;s.port1.close(),a&&(await k(.1*1e3),this.iframe&&(this.iframe.style.display="none")),c.success?r(c.data):i(new Error(c.error))}});return this.iframe.contentWindow?.postMessage({data:{...n,...await this.onIframeLoadedInitVariables()},eventType:e},this.iframeBaseUrl,[s.port2]),o}destroy(){this.iframe&&L.delete(this.iframe.src)}}class Oe extends We{constructor({clientId:e,baseUrl:n,ecosystem:a}){super({baseUrl:n,clientId:e,container:typeof document>"u"?void 0:document.body,ecosystem:a,iframeId:_e+(a?.id||""),link:Ce({baseUrl:n,clientId:e,ecosystem:a,path:te}).href,localStorage:new x({clientId:e,ecosystem:a,storage:z})}),this.clientId=e,this.ecosystem=a}}function Ce({clientId:t,baseUrl:e,path:n,ecosystem:a,queryParams:s}){const o=new URL(`${n}`,e);if(s)for(const r of Object.keys(s))o.searchParams.set(r,s[r]?.toString()||"");return o.searchParams.set("clientId",t),a?.partnerId!==void 0&&o.searchParams.set("partnerId",a.partnerId),a?.id!==void 0&&o.searchParams.set("ecosystemId",a.id),o}const _e="thirdweb-in-app-wallet-iframe";async function $e({client:t,ecosystem:e,authToken:n}){const s=await h(t,e)(`${w("inAppWallet")}/api/v1/enclave-wallet/generate`,{headers:{Authorization:`Bearer embedded-wallet-token:${n}`,"Content-Type":"application/json","x-thirdweb-client-id":t.clientId},method:"POST"});if(!s.ok)throw new Error(`Failed to generate wallet - ${s.status} ${s.statusText}`);const{wallet:o}=await s.json();return o}class je{constructor({baseUrl:e,querier:n,preLogin:a,postLogin:s,client:o,ecosystem:r}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=e,this.LoginQuerier=n,this.preLogin=a,this.postLogin=s,this.client=o,this.ecosystem=r}async sendEmailLoginOtp({email:e}){return await this.LoginQuerier.call({params:{email:e},procedureName:"sendThirdwebEmailLoginOtp"})}async sendSmsLoginOtp({phoneNumber:e}){return await this.LoginQuerier.call({params:{phoneNumber:e},procedureName:"sendThirdwebSmsLoginOtp"})}}class De extends je{async authenticateWithModal(){return this.LoginQuerier.call({params:void 0,procedureName:"loginWithThirdwebModal",showIframe:!0})}async loginWithModal(){await this.preLogin();const e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe({email:e}){return this.LoginQuerier.call({params:{email:e},procedureName:"loginWithThirdwebModal",showIframe:!0})}async loginWithIframe({email:e}){await this.preLogin();const n=await this.authenticateWithIframe({email:e});return this.postLogin(n)}async authenticateWithCustomJwt({encryptionKey:e,jwt:n}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({params:{encryptionKey:e,jwt:n},procedureName:"loginWithCustomJwt"})}async loginWithCustomJwt({encryptionKey:e,jwt:n}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");await this.preLogin();const a=await this.authenticateWithCustomJwt({encryptionKey:e,jwt:n});return this.postLogin(a)}async authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:n}){return this.LoginQuerier.call({params:{encryptionKey:e,payload:n},procedureName:"loginWithCustomAuthEndpoint"})}async loginWithCustomAuthEndpoint({encryptionKey:e,payload:n}){if(!e||e.length===0)throw new Error("Encryption key is required for custom auth");await this.preLogin();const a=await this.authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:n});return this.postLogin(a)}async authenticateWithEmailOtp({email:e,otp:n,recoveryCode:a}){return this.LoginQuerier.call({params:{email:e,otp:n,recoveryCode:a},procedureName:"verifyThirdwebEmailLoginOtp"})}async loginWithEmailOtp({email:e,otp:n,recoveryCode:a}){const s=await this.authenticateWithEmailOtp({email:e,otp:n,recoveryCode:a});return this.postLogin(s)}async authenticateWithSmsOtp({phoneNumber:e,otp:n,recoveryCode:a}){return this.LoginQuerier.call({params:{otp:n,phoneNumber:e,recoveryCode:a},procedureName:"verifyThirdwebSmsLoginOtp"})}async loginWithSmsOtp({phoneNumber:e,otp:n,recoveryCode:a}){const s=await this.authenticateWithSmsOtp({otp:n,phoneNumber:e,recoveryCode:a});return this.postLogin(s)}}class Ue{constructor({client:e,querier:n,onAuthSuccess:a,ecosystem:s,baseUrl:o,localStorage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=s,this.AuthQuerier=n,this.localStorage=r,this.onAuthSuccess=a,this.BaseLogin=new De({baseUrl:o,client:e,ecosystem:s,postLogin:async i=>this.postLogin(i),preLogin:async()=>{await this.preLogin()},querier:n})}async preLogin(){await this.logout()}async postLogin({storedToken:e,walletDetails:n}){return e.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(e.cookieString),await this.onAuthSuccess({storedToken:e,walletDetails:n})}async loginWithAuthToken(e,n){e.storedToken.authProvider!=="Backend"&&await this.preLogin();const a=await O({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!a)throw new Error("Cannot login, no user found for auth token");if(a.wallets.length>0&&a.wallets[0]?.type==="enclave")return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.wallets[0].address}});if(a.wallets.length===0){const o=await $e({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:o.address}})}const s=await this.AuthQuerier.call({params:{recoveryCode:n,storedToken:e.storedToken},procedureName:"loginWithStoredTokenDetails"});return this.postLogin(s)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp({email:e}){return this.BaseLogin.sendEmailLoginOtp({email:e})}async sendSmsLoginOtp({phoneNumber:e}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:e})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){const e=await this.localStorage.removeAuthCookie(),n=await this.localStorage.removeWalletUserId();return{success:e||n}}}const Fe="width=350, height=500",F=({isWindowOpenedByFn:t,win:e,closeOpenedWindow:n})=>{t?e?.close():e&&n?n(e):e&&e.close()};async function Ne(t){const e=I({...t,mode:t.mode||"redirect"});t.mode==="redirect"?window.location.href=e:window.open(e),await new Promise(n=>setTimeout(n,5e3))}const Re=async t=>{let e=t.openedWindow,n=!1;if(e||(e=window.open(I({...t,mode:"popup"}),`Login to ${t.authOption}`,Fe),n=!0),!e)throw new Error("Something went wrong opening pop-up");return await new Promise((s,o)=>{const r=window.setInterval(async()=>{e.closed&&(clearInterval(r),window.removeEventListener("message",i),o(new Error("User closed login window")))},1e3),i=async l=>{if(l.origin===w("inAppWallet")){if(typeof l.data!="object"){o(new Error("Invalid event data"));return}switch(l.data.eventType){case"oauthSuccessResult":{window.removeEventListener("message",i),clearInterval(r),F({closeOpenedWindow:t.closeOpenedWindow,isWindowOpenedByFn:n,win:e}),l.data.authResult&&s(l.data.authResult);break}case"oauthFailureResult":{window.removeEventListener("message",i),clearInterval(r),F({closeOpenedWindow:t.closeOpenedWindow,isWindowOpenedByFn:n,win:e}),o(new Error(l.data.errorString));break}}}};window.addEventListener("message",i)})},Be=async t=>{const{client:e,ecosystem:n}=t,a=I({authOption:t.strategy,client:e,ecosystem:n}),s={"Content-Type":"application/json","x-client-id":e.clientId};n?.id&&(s["x-ecosystem-id"]=n.id),n?.partnerId&&(s["x-ecosystem-partner-id"]=n.partnerId);const o=(()=>{switch(t.strategy){case"email":return{email:t.email};case"phone":return{phone:t.phoneNumber}}})(),r=await fetch(a,{body:p(o),headers:s,method:"POST"});if(!r.ok)throw new Error("Failed to send verification code");return await r.json()},N=async t=>{const{client:e,ecosystem:n}=t,a=C({authOption:t.strategy,client:t.client,ecosystem:t.ecosystem}),s={"Content-Type":"application/json","x-client-id":e.clientId};n?.id&&(s["x-ecosystem-id"]=n.id),n?.partnerId&&(s["x-ecosystem-partner-id"]=n.partnerId);const o=(()=>{switch(t.strategy){case"email":return{code:t.verificationCode,email:t.email};case"phone":return{code:t.verificationCode,phone:t.phoneNumber}}})(),r=await fetch(a,{body:p(o),headers:s,method:"POST"});if(!r.ok)throw new Error("Failed to verify verification code");return await r.json()};class R{constructor({client:e,ecosystem:n,querier:a,localStorage:s}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=n,this.walletManagerQuerier=a,this.localStorage=s}async postWalletSetUp(e){e.deviceShareStored&&await this.localStorage.saveDeviceShare(e.deviceShareStored,e.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){const e=await this.walletManagerQuerier.call({params:void 0,procedureName:"getUserStatus"});return e.status==="Logged In, Wallet Initialized"?{status:"Logged In, Wallet Initialized",...e.user,account:await this.getAccount()}:e.status==="Logged In, New Device"?{status:"Logged In, New Device",...e.user}:e.status==="Logged In, Wallet Uninitialized"?{status:"Logged In, Wallet Uninitialized",...e.user}:{status:e.status}}async getAccount(){const e=this.walletManagerQuerier,n=this.client,a=this.ecosystem?.partnerId,{address:s}=await e.call({params:void 0,procedureName:"getAddress"}),o=async r=>{const i={chainId:r.chainId,data:r.data,gasLimit:r.gas,nonce:r.nonce,to:r.to??void 0,value:r.value};r.maxFeePerGas?(i.accessList=r.accessList,i.maxFeePerGas=r.maxFeePerGas,i.maxPriorityFeePerGas=r.maxPriorityFeePerGas,i.type=2):(i.gasPrice=r.gasPrice,i.type=0);const l=_().rpc,{signedTransaction:c}=await e.call({params:{chainId:r.chainId,partnerId:a,rpcEndpoint:`https://${r.chainId}.${l}`,transaction:i},procedureName:"signTransaction"});return c};return{address:f(s),async sendTransaction(r){const i=S({chain:P(r.chainId),client:n}),l=await o(r),c=await G(i,l);return M({chainId:r.chainId,client:n,contractAddress:r.to??void 0,gasPrice:r.gasPrice,transactionHash:c,walletAddress:s,walletType:"inApp"}),{transactionHash:c}},async signMessage({message:r}){const i=typeof r=="string"?r:r.raw instanceof Uint8Array?r.raw:X(r.raw),{signedMessage:l}=await e.call({params:{chainId:1,message:i,partnerId:a},procedureName:"signMessage"});return l},async signTransaction(r){if(!r.chainId)throw new Error("chainId required in tx to sign");return o({...r,chainId:r.chainId})},async signTypedData(r){const i=B(r);i.types?.EIP712Domain&&(i.types.EIP712Domain=void 0);const l=i.domain,c=l?.chainId,d={...l?.verifyingContract?{verifyingContract:l?.verifyingContract}:{},name:l?.name,version:l?.version};c&&(d.chainId=c);const m=_().rpc,{signedTypedData:y}=await e.call({params:{chainId:Number.parseInt(BigInt(c||1).toString()),domain:d,message:i.message,partnerId:a,rpcEndpoint:`https://${c}.${m}`,types:i.types},procedureName:"signTypedDataV4"});return y}}}}class Qe{isClientIdLegacyPaper(e){return e.indexOf("-")>0&&e.length===36}constructor({client:e,onAuthSuccess:n,ecosystem:a,passkeyDomain:s,storage:o}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(e.clientId))throw new Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");const r=w("inAppWallet");this.client=e,this.ecosystem=a,this.passkeyDomain=s,this.storage=new x({clientId:e.clientId,ecosystem:a,storage:o??ze()}),this.querier=new Oe({baseUrl:r,clientId:e.clientId,ecosystem:a}),this.auth=new Ue({baseUrl:r,client:e,ecosystem:a,localStorage:this.storage,onAuthSuccess:async i=>{if(n?.(i),i.storedToken.authDetails.walletType==="sharded"&&(await this.querier.call({params:{storedToken:i.storedToken},procedureName:"migrateFromShardToEnclave"})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(i.storedToken.cookieString),!this.wallet)throw new Error("Failed to initialize wallet");const l="deviceShareStored"in i.walletDetails?i.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({deviceShareStored:l,storedToken:i.storedToken}),this.wallet instanceof R&&await this.querier.call({params:{authCookie:i.storedToken.cookieString,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in i.walletDetails?i.walletDetails.deviceShareStored:null,ecosystemId:a?.id,partnerId:a?.partnerId,walletUserId:i.storedToken.authDetails.userWalletId},procedureName:"initIframe"}),{user:{account:await this.wallet.getAccount(),authDetails:i.storedToken.authDetails,status:"Logged In, Wallet Initialized",walletAddress:i.walletDetails.walletAddress}}},querier:this.querier})}async initializeWallet(e){const n=await this.storage.getAuthCookie();if(!e&&n===null)throw new Error("No auth token provided and no stored auth token found to initialize the wallet");const a=await O({authToken:e||n,client:this.client,ecosystem:this.ecosystem});if(!a)throw new Error("Cannot initialize wallet, no user logged in");if(a.wallets.length===0)throw new Error("Cannot initialize wallet, this user does not have a wallet generated yet");return a.wallets[0]?.type==="enclave"?new Se({address:a.wallets[0].address,client:this.client,ecosystem:this.ecosystem,storage:this.storage}):new R({client:this.client,ecosystem:this.ecosystem,localStorage:this.storage,querier:this.querier})}async getUser(){if(!this.wallet){const e=await this.storage.getAuthCookie();if(!e)return{status:"Logged Out"};this.wallet=await this.initializeWallet(e)}if(!this.wallet)throw new Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw new Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return Be({...e,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(e,n,a){return Ne({authOption:e,client:this.client,ecosystem:this.ecosystem,mode:n,redirectUrl:a})}async loginWithAuthToken(e,n){return this.auth.loginWithAuthToken(e,n)}async authenticate(e){const n=e.strategy;switch(n){case"email":return N({...e,client:this.client,ecosystem:this.ecosystem});case"phone":return N({...e,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return ue({client:this.client,ecosystem:this.ecosystem,payload:e.payload});case"jwt":return we({client:this.client,ecosystem:this.ecosystem,jwt:e.jwt});case"passkey":return this.passkeyAuth(e);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"tiktok":case"steam":case"coinbase":case"discord":return Re({authOption:n,client:this.client,closeOpenedWindow:e.closeOpenedWindow,ecosystem:this.ecosystem,openedWindow:e.openedWindow});case"guest":return he({client:this.client,ecosystem:this.ecosystem,storage:this.storage});case"backend":return de({client:this.client,ecosystem:this.ecosystem,walletSecret:e.walletSecret});case"wallet":return ve({chain:e.chain,client:this.client,ecosystem:this.ecosystem,wallet:e.wallet})}}async connect(e){const n=e.strategy;switch(n){case"auth_endpoint":case"jwt":{const a=await this.authenticate(e);return await this.loginWithAuthToken(a,e.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{const a=await this.passkeyAuth(e);return this.loginWithAuthToken(a)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"tiktok":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{const a=await this.authenticate(e);return await this.auth.loginWithAuthToken(a)}default:Me(n)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){const{PasskeyWebClient:n}=await b(async()=>{const{PasskeyWebClient:i}=await import("./passkeys-BrQrtewt.js");return{PasskeyWebClient:i}},[]),{passkeyName:a,storeLastUsedPasskey:s=!0}=e,o=new n,r=this.storage;return e.type==="sign-up"?ye({client:this.client,ecosystem:this.ecosystem,passkeyClient:o,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title},storage:s?r:void 0,username:a}):fe({client:this.client,ecosystem:this.ecosystem,passkeyClient:o,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title},storage:s?r:void 0})}async linkProfile(e){const{storedToken:n}=await this.authenticate(e);return await pe({client:e.client,ecosystem:e.ecosystem||this.ecosystem,storage:this.storage,tokenToLink:n.cookieString})}async unlinkProfile(e,n){return await ge({allowAccountDeletion:n,client:this.client,ecosystem:this.ecosystem,profileToUnlink:e,storage:this.storage})}async getProfiles(){return me({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}function Me(t,e){throw new Error(`Invalid param: ${t}`)}function ze(){return typeof window<"u"&&window.localStorage?z:se}export{Qe as InAppWebConnector};
