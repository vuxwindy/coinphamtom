import{Q as f,R as m,S,T as d,U as u,V as C,W as y,X as w,Y as U,Z as h,$ as P,a0 as b,a1 as A}from"./index-NVPnfjv5.js";const k={eip155:{native:{assetNamespace:"slip44",assetReference:"60"},defaultTokenNamespace:"erc20"},solana:{native:{assetNamespace:"slip44",assetReference:"501"},defaultTokenNamespace:"token"}};class D extends Error{}function T(){const{sdkType:t,sdkVersion:s,projectId:n}=m.getSnapshot(),a=new URL("https://rpc.walletconnect.org/v1/json-rpc");return a.searchParams.set("projectId",n),a.searchParams.set("st",t),a.searchParams.set("sv",s),a.searchParams.set("source","fund-wallet"),a.toString()}async function p(t,s){const n=T(),{projectId:a}=m.getSnapshot(),r={jsonrpc:"2.0",id:1,method:t,params:{...s||{},projectId:a}},c=await(await fetch(n,{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}})).json();if(c.error)throw new D(c.error.message);return c}async function x(t){return(await p("reown_getExchanges",t)).result}async function N(t){return(await p("reown_getExchangePayUrl",t)).result}async function v(t){return(await p("reown_getExchangeBuyStatus",t)).result}function g(t,s){const{chainNamespace:n,chainId:a}=f.parseCaipNetworkId(t),r=k[n];if(!r)throw new Error(`Unsupported chain namespace for CAIP-19 formatting: ${n}`);let o=r.native.assetNamespace,c=r.native.assetReference;return s!=="native"&&(o=r.defaultTokenNamespace,c=s),`${`${n}:${a}`}/${o}:${c}`}const I={network:"eip155:1",asset:"native",metadata:{name:"Ethereum",symbol:"ETH",decimals:18}},F={network:"eip155:8453",asset:"native",metadata:{name:"Ethereum",symbol:"ETH",decimals:18}},R={network:"eip155:8453",asset:"0x833589fcd6edb6e08f4c7c32d4f71b54bda02913",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},_={network:"eip155:84532",asset:"native",metadata:{name:"Ethereum",symbol:"ETH",decimals:18}},H={network:"eip155:1",asset:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},L={network:"eip155:42161",asset:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},W={network:"eip155:137",asset:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},O={network:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",asset:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},$={network:"eip155:1",asset:"0xdAC17F958D2ee523a2206206994597C13D831ec7",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},j={network:"eip155:10",asset:"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},q={network:"eip155:42161",asset:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},Y={network:"eip155:137",asset:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},B={network:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",asset:"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},K={network:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",asset:"native",metadata:{name:"Solana",symbol:"SOL",decimals:9}},G={ethereumETH:I,baseETH:F,baseUSDC:R,baseSepoliaETH:_,ethereumUSDC:H,arbitrumUSDC:L,polygonUSDC:W,solanaUSDC:O,ethereumUSDT:$,optimismUSDT:j,arbitrumUSDT:q,polygonUSDT:Y,solanaUSDT:B,solanaSOL:K};function J(t){return Object.values(G).filter(s=>s.network===t)}const M=0,E={paymentAsset:null,amount:10,tokenAmount:0,priceLoading:!1,error:null,exchanges:[],isLoading:!1,currentPayment:void 0,isPaymentInProgress:!1,paymentId:"",assets:[]},e=S(E),i={state:e,subscribe(t){return A(e,()=>t(e))},subscribeKey(t,s){return b(e,t,s)},resetState(){Object.assign(e,{...E})},async getAssetsForNetwork(t){const s=J(t),n=await i.getAssetsImageAndPrice(s),a=s.map(r=>{const o=r.asset==="native"?h():`${r.network}:${r.asset}`,c=n.find(l=>l.fungibles?.[0]?.address?.toLowerCase()===o.toLowerCase());return{...r,price:c?.fungibles?.[0]?.price||1,metadata:{...r.metadata,iconUrl:c?.fungibles?.[0]?.iconUrl}}});return e.assets=a,a},async getAssetsImageAndPrice(t){const s=t.map(a=>a.asset==="native"?h():`${a.network}:${a.asset}`);return await Promise.all(s.map(a=>P.fetchTokenPrice({addresses:[a]})))},getTokenAmount(){if(!e?.paymentAsset?.price)throw new Error("Cannot get token price");const t=new Intl.NumberFormat("en-US",{minimumFractionDigits:0,maximumFractionDigits:8}).format(e.amount/e.paymentAsset.price);return Number(t)},setAmount(t){e.amount=t,e.paymentAsset?.price&&(e.tokenAmount=i.getTokenAmount())},setPaymentAsset(t){e.paymentAsset=t},isPayWithExchangeEnabled(){return m.state.remoteFeatures?.payWithExchange||m.state.remoteFeatures?.payments||m.state.features?.pay},isPayWithExchangeSupported(){return i.isPayWithExchangeEnabled()&&w.state.activeCaipNetwork&&U.PAY_WITH_EXCHANGE_SUPPORTED_CHAIN_NAMESPACES.includes(w.state.activeCaipNetwork.chainNamespace)},async fetchExchanges(){try{const t=i.isPayWithExchangeSupported();if(!e.paymentAsset||!t){e.exchanges=[],e.isLoading=!1;return}e.isLoading=!0;const s=await x({page:M,asset:g(e.paymentAsset.network,e.paymentAsset.asset),amount:e.amount.toString()});e.exchanges=s.exchanges.slice(0,2)}catch{throw y.showError("Unable to get exchanges"),new Error("Unable to get exchanges")}finally{e.isLoading=!1}},async getPayUrl(t,s){try{const n=Number(s.amount),a=await N({exchangeId:t,asset:g(s.network,s.asset),amount:n.toString(),recipient:`${s.network}:${s.recipient}`});return d.sendEvent({type:"track",event:"PAY_EXCHANGE_SELECTED",properties:{exchange:{id:t},configuration:{network:s.network,asset:s.asset,recipient:s.recipient,amount:n},currentPayment:{type:"exchange",exchangeId:t},source:"fund-from-exchange",headless:!1}}),a}catch(n){throw n instanceof Error&&n.message.includes("is not supported")?new Error("Asset not supported"):new Error(n.message)}},async handlePayWithExchange(t){try{if(!u.state.address)throw new Error("No account connected");if(!e.paymentAsset)throw new Error("No payment asset selected");const s=C.returnOpenHref("","popupWindow","scrollbar=yes,width=480,height=720");if(!s)throw new Error("Could not create popup window");e.isPaymentInProgress=!0,e.paymentId=crypto.randomUUID(),e.currentPayment={type:"exchange",exchangeId:t};const{network:n,asset:a}=e.paymentAsset,r={network:n,asset:a,amount:e.tokenAmount,recipient:u.state.address},o=await i.getPayUrl(t,r);if(!o){try{s.close()}catch(c){console.error("Unable to close popup window",c)}throw new Error("Unable to initiate payment")}e.currentPayment.sessionId=o.sessionId,e.currentPayment.status="IN_PROGRESS",e.currentPayment.exchangeId=t,s.location.href=o.url}catch{e.error="Unable to initiate payment",y.showError(e.error)}},async waitUntilComplete({exchangeId:t,sessionId:s,paymentId:n,retries:a=20}){const r=await i.getBuyStatus(t,s,n);if(r.status==="SUCCESS"||r.status==="FAILED")return r;if(a===0)throw new Error("Unable to get deposit status");return await new Promise(o=>{setTimeout(o,5e3)}),i.waitUntilComplete({exchangeId:t,sessionId:s,paymentId:n,retries:a-1})},async getBuyStatus(t,s,n){try{if(!e.currentPayment)throw new Error("No current payment");const a=await v({sessionId:s,exchangeId:t});return e.currentPayment.status=a.status,(a.status==="SUCCESS"||a.status==="FAILED")&&(e.currentPayment.result=a.txHash,e.isPaymentInProgress=!1,d.sendEvent({type:"track",event:a.status==="SUCCESS"?"PAY_SUCCESS":"PAY_ERROR",properties:{source:"fund-from-exchange",paymentId:n,configuration:{network:e.paymentAsset?.network||"",asset:e.paymentAsset?.asset||"",recipient:u.state.address||"",amount:e.amount},currentPayment:{type:"exchange",exchangeId:e.currentPayment?.exchangeId,sessionId:e.currentPayment?.sessionId,result:a.txHash}}})),a}catch{return{status:"UNKNOWN",txHash:""}}},reset(){e.currentPayment=void 0,e.isPaymentInProgress=!1,e.paymentId="",e.paymentAsset=null,e.amount=0,e.tokenAmount=0,e.priceLoading=!1,e.error=null,e.exchanges=[],e.isLoading=!1}};export{i as E};
